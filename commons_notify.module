<?php
/**
 * @file
 * Code for the Commons Notify feature.
 */

include_once 'commons_notify.features.inc';


/**
 * Implements hook_node_insert().
 */
function commons_notify_node_insert($node) {
  // Create a message when a user creates a new node.
  // Borrowed from message_example.module:
  // Save the message and assign it to the user realm. Since another user,
  // usually an admin might create the node, but populate the author field
  // with another user, we make sure the user realm is populated with the
  // node's author, instead of the acting user (although in most cases it
  // would be the same user).
  // The following example demonstrates that we don't need to explicitly set
  // the realm to the user, since if no realms are provided then the message
  // is automatically assigned to the user passed in the function, or if no
  // user object is provided, then to the acting user.

  $message_type = 'commons_notify_node_created';

  // Allow other modules to specify an alternative messagge type to use.
  $hook = 'node_insert';
  drupal_alter('commons_notify_message_selection', $message_type, $hook, $node);
  $account = user_load($node->uid);
  $message = message_create($message_type, array('uid' => $account->uid, 'timestamp' => $node->created));
  // Save reference to the node in the node reference field.
  $wrapper = entity_metadata_wrapper('message', $message);
  // We use a multiple value field in case we wish to use the same
  // field for grouping messages in the future
  // (eg http://drupal.org/node/1757060).
  $wrapper->field_target_nodes[] = $node;
  $wrapper->save();
  $options = array(
    'rendered fields' => array(
      'message_notify_email_subject' => 'field_message_rendered_subject',
      'message_notify_email_body' => 'field_message_rendered_body',
    ),
  );
  message_subscribe_process_message('node', $node, $message, array('email' => $options));
}