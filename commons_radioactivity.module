<?php
/**
 * @file
 * Code for the Commons Radioactivity feature.
 */

// Include files contain hook implementations for the corresponding modules.
include_once 'commons_radioactivity.features.inc';
include_once 'includes/incidents/commons_radioactivity.incidents_comment.inc';
include_once 'includes/incidents/commons_radioactivity.incidents_node.inc';
include_once 'includes/incidents/commons_radioactivity.incidents_flag.inc';
include_once 'includes/incidents/commons_radioactivity.incidents_votingapi.inc';


// Define constants for Commons Radioactivity incidents.
// These could be changed to variables and made more configurable.
define('COMMONS_RADIOACTIVITY_COMMENT', 2);
define('COMMONS_RADIOACTIVITY_LIKE', 4);
define('COMMONS_RADIOACTIVITY_NODE_IN_GROUP', 4);
define('COMMONS_RADIOACTIVITY_FLAG_NODE', 6);


/**
* Helper function to create Radioactivity incidents for nodes.
*/
function commons_radioactivity_incident_node($node, $value) {
  $profile = radioactivity_get_field_profile('node', $node->type, 'field_radioactivity');
  if ($profile && $profile->storageObject) {
    $profile->storageObject->addIncident(new RadioactivityIncident('node', $node->type, 'field_radioactivity', LANGUAGE_NONE, $node->nid, $value, time()));
  }
  // If this node is a member of groups, generate an incident for each group.
  if (!empty($node->field_og_group_ref)) {
    commons_radioactivity_incident_groups($node, $value);
  }
}

/**
* Helper function to create Radioactivity incidents for groups
* to which a node belongs.
*/
function commons_radioactivity_incident_groups($node, $value) {
  foreach ($node->field_og_group_ref as $field) {
   $gids[] = $field['target_id'];
  }
  // @Todo: We may wish to instead simply select the types of these groups.
  $groups = node_load_multiple($gids);
  foreach ($groups as $group) {
    commons_radioactivity_incident_node($group, $value);
  }
}


function commons_radioactivity_process_changed_group_membership($node) {
  $groups_removed = array();
  $groups_added = array();

  $groups_removed = array_diff($groups_original, $groups_new);
  $groups_added = array_diff($groups_new, $groups_original);
}
