<?php
/**
 * Implementation of hook_ctools_plugin_directory().
 */
function commons_bw_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && $plugin == 'content_types') {
    return 'plugins/' . $plugin;
  }
}

/**
* Get a list of modules that add content to a particular type of widget.
* The only currently supported widget type is 'group', but this
* could be extended to support other entities.
*/
function commons_bw_get_tab_definitions($widget_type = 'group') {
  $tabs = array();
  $hook_name = 'commons_bw_' . $widget_type . '_widget';
  $tabs = module_invoke_all($hook_name);
  drupal_alter($hook_name, $tabs);
  return $tabs;
}

/**
* Generate a renderable group widget.
*/

function commons_bw_generate_group_widget($group) {
  $settings = array('style' => 'Commons Pills', 'ajax' => FALSE, 'html' => TRUE);
  // Load the default tab definitinos.
  $tabs = commons_bw_get_tab_definitions('group');
  foreach ($tabs as $key => $tab) {
    // Populate the group argument.
    $tabs[$key]['args'] = $group->nid;
    // Add the result count for Tabs that are of the type 'view';
    if ($tab['type'] == 'view') {
      $view = views_get_view($tab['vid']);
      if (isset($tab['display'])) {
        $view->set_display($tab['display']);
      }
      $view->set_arguments(array($group->nid));
      $view->execute();
      $tabs[$key]['title'] = t($tabs[$key]['title']) . ' <span class="commons-bw-result-count">'. $view->total_rows . '</span>';
    }
    // Set the default tab.
    if (isset($tabs[$key]['default']) && $tabs[$key]['default']) {
      $settings['default_tab'] = $key;
    }
  }

  // Generate the Quicktabs instance.
  return quicktabs_build_quicktabs('commons_bw', $settings, $tabs);
}

/**
 * Implements hook_quicktabs_tabstyles().
 */

function commons_bw_quicktabs_tabstyles() {
  $path = drupal_get_path('module', 'commons_bw');
  return array(
    $path . '/plugins/quicktabs_styles/commons_pills/commons_pills.css' => t('Commons Pills'),
    $path . '/plugins/quicktabs_styles/commons_tabs/commons_tabs.css' => t('Commons Tabs'),
  );
}
